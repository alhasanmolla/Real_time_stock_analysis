import yfinance as yf
import pandas as pd
import pickle
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score

# рзз. AAPL ржПрж░ ржРрждрж┐рж╣рж╛рж╕рж┐ржХ ржбрзЗржЯрж╛ ржбрж╛ржЙржирж▓рзЛржб
print("ЁЯУе Downloading AAPL historical data...")
data = yf.download("AAPL", period="6d", interval="1m")  # рж╢рзЗрж╖ рзм ржорж╛рж╕рзЗрж░ ржбрзЗржЗрж▓рж┐ ржбрзЗржЯрж╛

# рзи. ржбрзЗржЯрж╛ ржкрзНрж░рж╕рзЗрж╕рж┐ржВ
data = data.dropna().reset_index()
data.rename(columns={
    "Open": "open",
    "High": "high",
    "Low": "low",
    "Close": "close",
    "Volume": "volume"
}, inplace=True)

# рзй. ржлрж┐ржЪрж╛рж░ ржУ ржЯрж╛рж░рзНржЧрзЗржЯ рждрзИрж░рж┐
# ржЯрж╛рж░рзНржЧрзЗржЯ: ржкрж░рзЗрж░ ржжрж┐ржирзЗрж░ close ржкрзНрж░рж╛ржЗрж╕ (shift -1)
data["target"] = data["close"].shift(-1)
data = data.dropna()

X = data[["open", "high", "low", "close", "volume"]]
y = data["target"]

# рзк. ржбрзЗржЯрж╛ рж╕рзНржкрзНрж▓рж┐ржЯ
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, shuffle=False)

# рзл. ржоржбрзЗрж▓ ржЯрзНрж░рзЗржЗржи
print("ЁЯдЦ Training Linear Regression model...")
model = LinearRegression()
model.fit(X_train, y_train)

# рзм. ржоржбрзЗрж▓ ржкрж╛рж░ржлрж░ржорзНржпрж╛ржирзНрж╕ ржЪрзЗржХ
y_pred = model.predict(X_test)
print(f"ЁЯУК R┬▓ Score: {r2_score(y_test, y_pred):.4f}")

# рзн. ржоржбрзЗрж▓ рж╕рзЗржн
with open("model.pkl", "wb") as f:
    pickle.dump(model, f)

print("тЬЕ model.pkl saved successfully!")
print("тЬЕ Model training completed and saved as model.pkl")